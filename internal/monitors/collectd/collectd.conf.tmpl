# Use a relative path because collectd will choke if the cwd is just '/' since
# it strips off trailing slashes from the path before doing the chdir.
BaseDir "{{ stripTrailingSlash .BundleDir }}/plugins/.."
TypesDB "{{ stripTrailingSlash .BundleDir }}/plugins/collectd/types.db"
PluginDir "{{ stripTrailingSlash .BundleDir }}/plugins/collectd"

# We use the hostname purely to add dimensions to all value lists coming out of
this instance of collectd.  The host dimension gets added by the agent after
datapoints are gotten from collectd.
Hostname "{{ encodeDimsWithBrackets .ExtraDimensions }}"
FQDNLookup false
Interval {{ .IntervalSeconds }}
Timeout {{ .Timeout }}
ReadThreads {{ .ReadThreads }}
WriteThreads {{ .WriteThreads }}
WriteQueueLimitHigh {{ .WriteQueueLimitHigh }}
WriteQueueLimitLow  {{ .WriteQueueLimitLow }}
CollectInternalStats false

LoadPlugin logfile

<Plugin logfile>
  LogLevel "{{.LogLevel}}"
  Timestamp true
  PrintSeverity true
</Plugin>

LoadPlugin match_regex
LoadPlugin target_set

<Chain "PostCache">
  Target "write"
</Chain>

{{if .UseWriteHTTP }}
<LoadPlugin "write_http">
   FlushInterval 2
</LoadPlugin>
<Plugin "write_http">
  <Node "SignalFx">
    URL "{{.WriteServerURL}}"
    Format "JSON"
    Timeout 5000
    BufferSize 4096
    LogHttpError true
  </Node>
</Plugin>
{{else}}
LoadPlugin "network"
<Plugin "network">
  Server "{{.WriteServerIPAddr}}" "{{.WriteServerPort}}"
  SendDSNames true
  DisableBuffering true
</Plugin>
{{end}}

{{if .HasGenericJMXMonitor}}
TypesDB "{{ pluginRoot }}/java/signalfx_types_db"
LoadPlugin "java"

<Plugin java>
  #JVMArg "-verbose:jni"
  JVMArg "-Djava.class.path={{ pluginRoot }}/java/collectd-api.jar:{{ pluginRoot }}/java/generic-jmx.jar"

  LoadPlugin "org.collectd.java.GenericJMX"
</Plugin>
{{end}}

Include "{{.ManagedConfigDir}}/*.conf"
